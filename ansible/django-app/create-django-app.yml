---
- name: Setup Django App and Virtual Environment on Remote Server
  hosts: lxc
  become: true
  vars_files:
    - vars.yml
  tasks:

    # Installs these three packages. Doesn't if they already exist.
    - name: Ensure Python3, pip, and virtualenv are installed
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
        state: present
        update_cache: yes

    # creates project directory with execution permissions 
    - name: Create project directory on remote server
      file:
        path: "{{ project_dir }}"
        state: directory
        mode: '0755'
    # creates venv. Doesn't if it already exists
    - name: Create virtual environment
      command: python3 -m venv {{ venv_dir }}
      args:
        creates: "{{ venv_dir }}"  # This ensures the command is only run if the venv doesn't already exist

    - name: Install Python packages from requirements.txt in the virtual environment
      pip:
        requirements: "{{ requirements_file }}"
        virtualenv: "{{ venv_dir }}"

    - name: Create Django app
      command: "{{ venv_dir }}/bin/django-admin startproject {{ project_name }}"
      args:
        chdir: "{{ project_dir }}"
        creates: "{{ project_dir }}/{{ project_name }}"  # This ensures the command is only run if the project doesn't already exist

    - name: Install gunicorn
      pip:
        name: gunicorn
        virtualenv: "{{ venv_dir }}"

    - name: Start gunicorn server
      command: "{{ venv_dir }}/bin/gunicorn --workers 3 --bind 0.0.0.0:8000 {{ project_name }}.wsgi:application"
      args:
        chdir: "{{ project_dir }}/{{ project_name }}"
      async: 10  # Allow the task to run in the background
      poll: 0    # Don't wait for the task to finish, let it run in the background
